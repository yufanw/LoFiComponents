{"version":3,"sources":["components/FloatingButton/index.jsx","components/ScoreBox/index.jsx","components/Switch/index.jsx","components/Checkbox/index.jsx","App.jsx","registerServiceWorker.js","index.js"],"names":["FloatingButton","state","count","_this","props","handleClick","setState","_ref","clicked","onClick","setTimeout","react_default","a","createElement","className","this","href","Component","defaultProps","ScoreBox","icon","score","Switch","on","toggle","htmlFor","type","name","id","onChange","checked","Checkbox","App","floatingbutton","rainbowClass","handleFloatingButtonClick","concat","String","length","handleToggle","_ref2","toggleIcon","src_components_ScoreBox","FloatingButton_FloatingButton","Switch_Switch","Checkbox_Checkbox","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.309ba2bb.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './index.css';\n\nexport default class FloatingButton extends Component {\n  static propTypes = {\n    count: PropTypes.number,\n    onClick: PropTypes.func\n  }\n  static defaultProps = {\n    count: 0\n  }\n  state = {\n    count: this.props.count\n  }\n\n  handleClick = () => {\n    this.setState(({count}) => ({\n      count: count + 1,\n      clicked: true\n    }), this.props.onClick);\n    setTimeout(() => {\n      this.setState({\n        clicked: false\n      });\n    }, 280);\n  }\n\n  render() {\n    return (\n      <div className=\"floating-button-comp\">\n        <div className=\"floating-button-wrapper\">\n          <a className={this.state.clicked ? \"btn active\" : \"btn\"}\n            href=\"#0w0\"\n            onClick={this.handleClick}>\n            <i className=\"icon ion-ios-heart\"></i>\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './index.css';\n\nconst ScoreBox = ({icon, score}) => {\n  return (\n    <div className=\"scorebox-comp\">\n      <div className=\"scorebox-wrapper\">\n        <div className=\"icon\">\n          {icon}\n        </div>\n        <div className=\"score\">\n          {score}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nScoreBox.propTypes = {\n  icon: PropTypes.element,\n  score: PropTypes.any\n};\n\nexport default ScoreBox;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './index.css';\n\nexport default class Switch extends Component {\n  static propTypes = {\n    toggle: PropTypes.func,\n    on: PropTypes.bool\n  }\n  static defaultProps = {\n    on: false\n  }\n  state = {\n    on: this.props.on\n  }\n\n  toggle = () => {\n    this.setState(({on}) => ({\n      on: !on\n    }), this.props.toggle);\n  }\n\n  render() {\n    return (\n      <div className=\"switch-comp\">\n        <div className=\"switch-wrapper\">\n          <label className={this.state.on ? \"switch\" : \"switch off\"} htmlFor=\"switch\">\n            <input type=\"checkbox\" \n              name=\"switch\" \n              id=\"switch\" \n              onChange={this.toggle}\n              checked={this.state.on}/>\n            <div className={this.state.on ? \"slider\" : \"slider off\"}></div>\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport './index.css';\n\nexport default class Checkbox extends Component {\n  render() {\n    return (\n      <div className=\"checkbox-comp\">\n        <div className=\"checkbox-wrapper\">\n          <label className=\"container\">\n            <input type=\"radio\" name=\"radio\"/>\n            <span className=\"checkmark red\"></span>\n          </label>\n          <label className=\"container\">\n            <input type=\"radio\" name=\"radio\"/>\n            <span className=\"checkmark yellow\"></span>\n          </label>\n          <label className=\"container\">\n            <input type=\"radio\" name=\"radio\"/>\n            <span className=\"checkmark green\"></span>\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport FloatingButton from \"./components/FloatingButton\";\nimport ScoreBox from \"./components/ScoreBox\";\nimport Switch from \"./components/Switch\";\nimport Checkbox from \"./components/Checkbox\";\n\nclass App extends Component {\n  state = {\n    floatingbutton: 0,\n    toggle: false,\n    rainbowClass: \"\"\n  }\n\n  handleFloatingButtonClick = () => {\n    this.setState(({floatingbutton}) => ({\n      floatingbutton: floatingbutton + 1,\n      rainbowClass: `rainbow${String(String(floatingbutton + 1)[String(floatingbutton + 1).length - 1])}`\n    }));\n  }\n\n  handleToggle = () => {\n    this.setState(({toggle}) => ({\n      toggle: !toggle\n    }));\n  }\n\n  toggleIcon = () => {\n    if (this.state.toggle) {\n      return (\n        <div className=\"shift\">\n          <i className=\"icon ion-ios-moon\"></i>\n        </div>\n      );\n    }\n    return (\n      <div className=\"shift\">\n        <i className=\"icon ion-ios-sunny\"></i>\n      </div>\n    );\n  }\n\n  render() {\n    return ( \n      <div className={this.state.toggle ? \"App dark\" : \"App\"}>\n        <h1>LoFi Components</h1>\n        <div className=\"app-wrapper\">\n\n          <div className=\"comp\">\n            <div className={this.state.rainbowClass}>\n              <ScoreBox\n                icon={<i className=\"icon ion-ios-heart\"></i>}\n                score={this.state.floatingbutton}\n              />\n            </div>\n            <FloatingButton \n              count={this.state.floatingbutton}\n              onClick={this.handleFloatingButtonClick}\n            />\n          </div>\n\n          <div className=\"comp\">\n            <ScoreBox \n              icon={this.toggleIcon()}\n            />\n            <Switch \n              on={this.state.toggle}\n              toggle={this.handleToggle}\n            />\n          </div>\n\n          <div className=\"comp\">\n            <Checkbox />\n          </div>\n\n          <div className=\"comp info\">\n            <a href=\"https://github.com/yufanw/LoFiComponents\">\n              Follow Work on Github\n              <i className=\"icon ion-logo-github github\"></i>\n            </a>\n          </div>\n        </div>\n        <footer>\n          <h3><a href=\"https://github.com/yufanw\">Yufan Wang</a></h3>\n          <h5>v1.0.0</h5>\n          <a href=\"https://github.com/yufanw/LoFiComponents\">Source Code</a>\n          <a href=\"mailto:yufansmail@gmail.com\">Contact</a>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}